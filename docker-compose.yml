version: '3.7'

services:
  keycloak-db:
    image: mariadb:10.2
    restart: always
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=${KEYCLOAK_DB_PW}
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
    volumes:
      - data-keycloak:/var/lib/mysql

  keycloak:
    image: jboss/keycloak
    restart: always
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PW}
      - DB_VENDOR=mariadb
      - DB_ADDR=keycloak-db
      - DB_PASSWORD=${KEYCLOAK_DB_PW}
      - DB_USER=keycloak
      - PROXY_ADDRESS_FORWARDING=true
    ports:
      - 127.0.0.1:8081:8080

  webhooks:
    build: "./dockerfiles/webhooks/"
    restart: always
    volumes:
      - ./webhook:/etc/webhook
      - ./build:/target/
    tmpfs: /tmp/build
    ports:
      - 127.0.0.1:9000:9000
    command: "-verbose -hooks=/etc/webhook/hooks.json"

  mailman-db:
    image: mariadb
    restart: always
    environment:
      - MYSQL_DATABASE=mailman
      - MYSQL_USER=mailman
      - MYSQL_PASSWORD=${MAILMAN_DB_PW}
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
    volumes:
      - data-mailman:/var/lib/mysql
    networks:
      - mailman

  mailman-core:
    image: maxking/mailman-core:latest
    restart: always
    volumes:
      - ./mailman/core:/opt/mailman/
    stop_grace_period: 30s
    depends_on:
      - mailman-db
    environment:
      - DATABASE_URL=mysql+pymysql://mailman:${MAILMAN_DB_PW}@mailman-db/mailman
      - DATABASE_TYPE=mysql
      - DATABASE_CLASS=mailman.database.mysql.MySQLDatabase
      - HYPERKITTY_API_KEY=${HYPERKITTY_API_KEY}
      - SMTP_HOST=mta
      - SMTP_PORT=25
    networks:
      - mailman

  mailman-web:
    image: maxking/mailman-web:latest
    restart: always
    depends_on:
      - mailman-db
    volumes:
      - ./mailman/web:/opt/mailman-web-data
    environment:
      - DATABASE_URL=mysql://mailman:${MAILMAN_DB_PW}@mailman-db/mailman
      - DATABASE_TYPE=mysql
      - DATABASE_CLASS=mailman.database.mysql.MySQLDatabase
      - HYPERKITTY_API_KEY=${HYPERKITTY_API_KEY}
      - SECRET_KEY=${DJANGO_KEY}
      - SERVE_FROM_DOMAIN=lists.rpg-librarium.de
      - MAILMAN_ADMIN_USER=admin
      - MAILMAN_ADMIN_EMAIL=listlord@rpg-librarium.de
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=mta
      - EMAIL_PORT=25
    ports:
      - 127.0.0.1:8091:8000
    networks:
      - mailman
      #- mailman_net_internal

  mta:
    image: primesign/exim4
    restart: always
    volumes:
      # Sets aliases for exim
      - ./mta/aliases:/etc/aliases:ro
      # Not sure if exim.conf in git is a good idea
      - ./mta/exim.conf:/etc/exim/exim.conf:ro
      # DKIM keys certainly are not
      - ./mta/dkim:/etc/exim/dkim:ro
      - ./mta/mailname:/etc/mailname:ro
      # TLS certificates neither
      - ./mta/tls:/etc/exim/tls:ro
      - spool:/var/spool/exim
      # Share sockets with mailman
      - ./mailman/core/var:/opt/mailman/core/var
    networks:
      mailman:
        # This was an attempt to make it work with ipv6. We failed.
        #ipv4_address: 172.16.238.222
        #ipv6_address: 2a03:4000:38:48:ffff::10
    ports:
      - 0.0.0.0:25:25
      #- :::25:25
      #- *:25:25

  liberation-db:
    image: mariadb
    restart: always
    environment:
      - MYSQL_DATABASE=liberation
      - MYSQL_USER=liberation
      - MYSQL_PASSWORD=${LIBERATION_DB_PW}
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
    ports:
      - 33061:3306

# Still experimental
  liberation:
    build: ./liberation
    restart: unless-stopped
    depends_on:
      - liberation-db
    ports:
      - 127.0.0.1:8042:8080
    volumes:
      - ./liberation/config/local.toml:/app/config/local.toml:ro
    environment:
      - LIBERATION_DATABASE_HOSTNAME=liberation-db
      - LIBERATION_DATABASE_USERNAME=liberation
      - LIBERATION_DATABASE_PASSWORD=${LIBERATION_DB_PW}
      - LIBERATION_DATABASE_DATABASE=liberation
#      - RUST_LOG=liberation=info,actix_web=info
      - RUST_LOG=liberation=info
#    entrypoint: /bin/bash
#    command: "while 1; do sleep 1000; done"

  gitea-db:
    image: mariadb
    restart: always
    environment:
      - MYSQL_DATABASE=gitea
      - MYSQL_USER=gitea
      - MYSQL_PASSWORD=${GITEA_DB_PW}
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
    networks:
      - gitea
    volumes:
      - data-gitea:/var/lib/mysql

  gitea:
    image: gitea/gitea:latest
    depends_on:
      - gitea-db
    environment:
      # Parameters here are only used during setup and stored in the config afterwards. Changing them after the container has been initialized won't do anything.
      - APP_NAME=RPG Librarium Aachen e.V.
      - RUN_MODE=prod
      - USER_UID=973
      - USER_GIT=973
      - DB_TYPE=mysql
      - DB_HOST=gitea-db:3306
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=${GITEA_DB_PW}
      - SSH_DOMAIN=gitea.rpg-librarium.de
      - SSH_LISTEN_PORT=222
      - SSH_PORT=22
      - HTTP_PORT=3000
      - ROOT_URL=https://gitea.rpg-librarium.de
      - DISABLE_REGISTRATION=false
      # The following are not part of the docker config, but must be changed after setup in the app.ini
      #- DOMAIN=gitea.rpg-librarium.de
      #- ALLOW_ONLY_EXTERNAL_REGISTRATION=true
      #- DEFAULT_ALLOW_CREATE_ORGANIZATION=false
      #- ENABLE_OPENID_SIGNIN=false
      #- ENABLE_OPENID_SIGNUP=false
    restart: always
    networks:
      - gitea
    volumes:
      - ./gitea:/data
    ports:
      - "127.0.0.1:8031:3000"
      - "222:22"

networks:
  mailman:
# This was an attempt to make it work with ipv6. We failed.
#    ipam:
#      driver: default
#      config:
#        - subnet: "172.16.238.0/24"
#        - subnet: "2a03:4000:38:48:ffff::/80"
  gitea:
    external: false

volumes:
  data-keycloak:
    driver: local
  data-mailman:
    driver: local
  data-gitea:
    driver: local
  spool:
    driver: local
